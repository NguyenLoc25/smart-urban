import React, { useState } from 'react';
import { FiHome, FiZap, FiTrash2, FiChevronDown, FiChevronUp, FiExternalLink, FiCheckCircle } from 'react-icons/fi';

const FeatureCard = ({ icon, title, description, progress, color, children }) => {
  const [expanded, setExpanded] = useState(false);
  
  return (
    <div className={`w-full bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-all duration-300 border-t-4 border-${color}-500 relative overflow-hidden`}>
      <div className=" flex items-start justify-between">
        <div className="flex items-start">
          <div className={`bg-${color}-100 p-3 rounded-lg mr-4 text-${color}-600`}>
            {icon}
          </div>
          <div>
            <h2 className="text-xl font-semibold text-gray-800">{title}</h2>
            <p className="text-gray-600 mt-1">{description}</p>
          </div>
        </div>
        <button 
          onClick={() => setExpanded(!expanded)}
          className={`text-${color}-600 hover:bg-${color}-50 p-2 rounded-full transition-colors`}
          aria-label={expanded ? "Thu g·ªçn" : "M·ªü r·ªông"}
        >
          {expanded ? <FiChevronUp size={20} /> : <FiChevronDown size={20} />}
        </button>
      </div>
      
      {progress && (
        <div className="mt-4">
          <div className="flex justify-between text-sm text-gray-500 mb-1">
            <span>Ti·∫øn ƒë·ªô ph√°t tri·ªÉn</span>
            <span>{progress}%</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-2">
            <div 
              className={`bg-${color}-500 h-2 rounded-full`} 
              style={{ width: `${progress}%` }}
            ></div>
          </div>
        </div>
      )}
      
      <div className={`transition-all duration-300 overflow-hidden ${expanded ? 'mt-4 opacity-100 max-h-screen' : 'opacity-0 max-h-0'}`}>
        {children}
      </div>
      
      {/* Decorative element */}
      <div className={`absolute bottom-0 right-0 w-16 h-16 bg-${color}-50 rounded-tl-full opacity-30`}></div>
    </div>
  );
};

const MainPage = () => {
  const [activeTab, setActiveTab] = useState('energy');
  
  const energyData = [
    { year: 2023, solar: 1200, wind: 800, hydro: 400 },
    { year: 2022, solar: 900, wind: 700, hydro: 350 },
    { year: 2021, solar: 600, wind: 500, hydro: 300 },
  ];

  return (
    <div className="w-full bg-gradient-to-br from-gray-50 to-blue-50 min-h-screen p-4 md:p-8">
      <div className="w-full max-w-6xl mx-auto">
        {/* Animated Header */}
        <header className="w-full mb-12 text-center animate-fadeIn">
          <div className="inline-block bg-gradient-to-r from-blue-600 to-blue-500 text-white px-6 py-3 rounded-xl mb-4 shadow-lg transform hover:scale-105 transition-transform duration-300">
            <h1 className="text-3xl md:text-4xl font-bold flex items-center justify-center">
              <span className="mr-2">üèôÔ∏è</span> Smart-Urban
            </h1>
          </div>
          <p className="text-lg md:text-xl text-gray-700 max-w-3xl mx-auto leading-relaxed">
            Gi·∫£i ph√°p ƒë√¥ th·ªã th√¥ng minh to√†n di·ªán, k·∫øt n·ªëi m·ªçi kh√≠a c·∫°nh c·ªßa cu·ªôc s·ªëng ƒë√¥ th·ªã 
            v√†o m·ªôt n·ªÅn t·∫£ng duy nh·∫•t v·ªõi c√¥ng ngh·ªá ti√™n ti·∫øn v√† giao di·ªán tr·ª±c quan.
          </p>
        </header>

        {/* Tab Navigation */}
        <div className="flex overflow-x-auto mb-8 scrollbar-hide">
          <div className="flex space-x-2">
            {[
              { id: 'home', icon: <FiHome />, label: 'T·ªïng quan' },
              { id: 'energy', icon: <FiZap />, label: 'NƒÉng l∆∞·ª£ng' },
              { id: 'garden', icon: <FiZap />, label: 'C·∫£nh quan' },
              { id: 'waste', icon: <FiTrash2 />, label: 'Ch·∫•t th·∫£i' },
            ].map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex items-center px-4 py-2 rounded-lg transition-all duration-200 ${activeTab === tab.id 
                  ? 'bg-blue-600 text-white shadow-md' 
                  : 'bg-white text-gray-700 hover:bg-gray-100'}`}
              >
                <span className="mr-2">{tab.icon}</span>
                {tab.label}
              </button>
            ))}
          </div>
        </div>

        {/* Main Content */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
          {/* Home Dashboard */}
          <FeatureCard 
            icon={<FiHome size={24} />}
            title="T·ªïng quan ƒê√¥ th·ªã"
            description="B·∫£ng ƒëi·ªÅu khi·ªÉn trung t√¢m qu·∫£n l√Ω to√†n b·ªô h·ªá th·ªëng"
            progress={30}
            color="blue"
          >
            <div className="space-y-4">
              <div className="bg-blue-50 p-4 rounded-lg border border-blue-100">
                <h3 className="font-medium text-blue-800 mb-2">Th·ªëng k√™ nhanh</h3>
                <div className="grid grid-cols-3 gap-2 text-center">
                  <div>
                    <div className="text-2xl font-bold text-blue-600">1,240</div>
                    <div className="text-xs text-gray-500">C∆∞ d√¢n</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-blue-600">42</div>
                    <div className="text-xs text-gray-500">T√≤a nh√†</div>
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-blue-600">98%</div>
                    <div className="text-xs text-gray-500">H√†i l√≤ng</div>
                  </div>
                </div>
              </div>
              <button className="w-full flex items-center justify-center text-blue-600 hover:text-blue-800 transition-colors">
                <FiExternalLink className="mr-2" /> Xem chi ti·∫øt b√°o c√°o
              </button>
            </div>
          </FeatureCard>

          {/* Garden Management */}
          <FeatureCard 
            icon={<FiZap size={24} />}
            title="Qu·∫£n l√Ω C·∫£nh quan"
            description="H·ªá th·ªëng theo d√µi v√† chƒÉm s√≥c kh√¥ng gian xanh"
            progress={15}
            color="green"
          >
            <div className="space-y-3">
              <div className="flex items-center text-green-700">
                <FiCheckCircle className="mr-2" />
                <span>Gi√°m s√°t t·ª± ƒë·ªông c√¢y xanh</span>
              </div>
              <div className="flex items-center text-green-700">
                <FiCheckCircle className="mr-2" />
                <span>L·ªãch t∆∞·ªõi ti√™u th√¥ng minh</span>
              </div>
              <div className="flex items-center text-gray-400">
                <FiCheckCircle className="mr-2" />
                <span>Ph√¢n t√≠ch ch·∫•t l∆∞·ª£ng ƒë·∫•t (coming soon)</span>
              </div>
            </div>
          </FeatureCard>
        </div>

        {/* Energy Section - Full width */}
        <FeatureCard 
          icon={<FiZap size={24} />}
          title="Qu·∫£n l√Ω NƒÉng l∆∞·ª£ng Th√¥ng minh"
          description="T·ªëi ∆∞u h√≥a h·ªá th·ªëng nƒÉng l∆∞·ª£ng xanh cho ƒë√¥ th·ªã b·ªÅn v·ªØng"
          progress={75}
          color="yellow"
          className="mb-8"
        >
          <div className="space-y-6">
            {/* Energy Stats */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-100">
                <div className="text-yellow-800 font-medium mb-1">T·ªïng thi·∫øt b·ªã</div>
                <div className="text-3xl font-bold text-yellow-600">156</div>
                <div className="text-xs text-yellow-700 mt-1">+12% so v·ªõi nƒÉm ngo√°i</div>
              </div>
              <div className="bg-blue-50 p-4 rounded-lg border border-blue-100">
                <div className="text-blue-800 font-medium mb-1">S·∫£n l∆∞·ª£ng h√¥m nay</div>
                <div className="text-3xl font-bold text-blue-600">24.5 MWh</div>
                <div className="text-xs text-blue-700 mt-1">ƒê·ªß cho 850 h·ªô gia ƒë√¨nh</div>
              </div>
              <div className="bg-green-50 p-4 rounded-lg border border-green-100">
                <div className="text-green-800 font-medium mb-1">Gi·∫£m ph√°t th·∫£i</div>
                <div className="text-3xl font-bold text-green-600">42 t·∫•n</div>
                <div className="text-xs text-green-700 mt-1">CO2 ti·∫øt ki·ªám h√†ng th√°ng</div>
              </div>
            </div>

            {/* Interactive Chart Placeholder */}
            <div className="bg-gray-50 rounded-lg p-4 border border-gray-200">
              <div className="flex justify-between items-center mb-4">
                <h3 className="font-medium text-gray-800">Bi·ªÉu ƒë·ªì s·∫£n l∆∞·ª£ng nƒÉng l∆∞·ª£ng</h3>
                <select className="bg-white border border-gray-300 rounded-md px-3 py-1 text-sm">
                  <option>Theo nƒÉm</option>
                  <option>Theo th√°ng</option>
                  <option>Theo ng√†y</option>
                </select>
              </div>
              <div className="h-64 bg-white rounded-md flex items-center justify-center text-gray-400">
                [Bi·ªÉu ƒë·ªì t∆∞∆°ng t√°c s·∫Ω hi·ªÉn th·ªã t·∫°i ƒë√¢y]
              </div>
              <div className="flex justify-center space-x-6 mt-4">
                {['Solar', 'Wind', 'Hydro'].map((type, index) => (
                  <div key={type} className="flex items-center">
                    <div 
                      className={`w-3 h-3 rounded-full mr-2 ${[
                        'bg-yellow-400',
                        'bg-blue-400',
                        'bg-green-400'
                      ][index]}`}
                    ></div>
                    <span className="text-sm text-gray-600">{type}</span>
                  </div>
                ))}
              </div>
            </div>

            {/* Installation Suggestions */}
            <div className="bg-white p-4 rounded-lg border border-gray-200 shadow-xs">
              <h3 className="font-medium text-gray-800 mb-3">ƒê·ªÅ xu·∫•t l·∫Øp ƒë·∫∑t m·ªõi</h3>
              <div className="space-y-3">
                {[
                  { location: 'Khu A - T√≤a nh√† B', type: 'Solar Panel', potential: 'High' },
                  { location: 'C√¥ng vi√™n Trung t√¢m', type: 'Wind Turbine', potential: 'Medium' },
                  { location: 'H·ªì n∆∞·ªõc ph√≠a B·∫Øc', type: 'Hydro Generator', potential: 'Low' },
                ].map((item, index) => (
                  <div key={index} className="flex items-start p-3 hover:bg-gray-50 rounded-lg transition-colors">
                    <div className={`w-2 h-2 mt-2 rounded-full mr-3 ${
                      item.potential === 'High' ? 'bg-green-500' : 
                      item.potential === 'Medium' ? 'bg-yellow-500' : 'bg-red-500'
                    }`}></div>
                    <div className="flex-1">
                      <div className="font-medium">{item.location}</div>
                      <div className="text-sm text-gray-600">{item.type} - Ti·ªÅm nƒÉng: {item.potential}</div>
                    </div>
                    <button className="text-blue-600 hover:text-blue-800 text-sm font-medium">
                      Xem chi ti·∫øt
                    </button>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </FeatureCard>

        {/* Waste Management */}
        <FeatureCard 
          icon={<FiTrash2 size={24} />}
          title="Qu·∫£n l√Ω Ch·∫•t th·∫£i Th√¥ng minh"
          description="H·ªá th·ªëng thu gom v√† x·ª≠ l√Ω r√°c th·∫£i t·ªëi ∆∞u"
          progress={5}
          color="red"
        >
          <div className="text-center py-6">
            <div className="inline-block bg-red-100 p-4 rounded-full mb-4">
              <FiTrash2 size={32} className="text-red-600" />
            </div>
            <h3 className="text-lg font-medium text-gray-800 mb-2">T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn</h3>
            <p className="text-gray-600 max-w-md mx-auto">
              Ch√∫ng t√¥i ƒëang x√¢y d·ª±ng h·ªá th·ªëng qu·∫£n l√Ω ch·∫•t th·∫£i th√¥ng minh v·ªõi c√°c c·∫£m bi·∫øn IoT 
              ƒë·ªÉ t·ªëi ∆∞u h√≥a l·ªô tr√¨nh thu gom r√°c v√† ph√¢n lo·∫°i t·ª± ƒë·ªông.
            </p>
            <button className="mt-4 bg-red-100 hover:bg-red-200 text-red-700 px-4 py-2 rounded-lg transition-colors">
              Nh·∫≠n th√¥ng b√°o khi ra m·∫Øt
            </button>
          </div>
        </FeatureCard>

        {/* Feedback Section */}
        <div className="mt-12 bg-white p-6 rounded-xl shadow-sm border border-gray-200">
          <h3 className="text-xl font-medium text-center mb-4">ƒê√≥ng g√≥p √Ω ki·∫øn c·ªßa b·∫°n</h3>
          <div className="max-w-md mx-auto">
            <textarea 
              className="w-full border border-gray-300 rounded-lg p-3 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              rows="4"
              placeholder="Ch√∫ng t√¥i mu·ªën nghe √Ω ki·∫øn c·ªßa b·∫°n ƒë·ªÉ c·∫£i thi·ªán Smart-Urban..."
            ></textarea>
            <div className="flex justify-between items-center mt-3">
              <div className="flex space-x-2">
                {['üòä', 'üòç', 'üòê', 'üòï', 'üòû'].map(emoji => (
                  <button key={emoji} className="text-2xl hover:scale-125 transition-transform">
                    {emoji}
                  </button>
                ))}
              </div>
              <button className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors">
                G·ª≠i ph·∫£n h·ªìi
              </button>
            </div>
          </div>
        </div>

        {/* Footer */}
        <footer className="mt-12 text-center text-gray-600 text-sm">
          <div className="flex justify-center space-x-6 mb-4">
            <a href="#" className="hover:text-blue-600 transition-colors">Gi·ªõi thi·ªáu</a>
            <a href="#" className="hover:text-blue-600 transition-colors">T√≠nh nƒÉng</a>
            <a href="#" className="hover:text-blue-600 transition-colors">B√°o gi√°</a>
            <a href="#" className="hover:text-blue-600 transition-colors">Li√™n h·ªá</a>
          </div>
          <p>¬© 2023 Smart-Urban. All rights reserved.</p>
        </footer>
      </div>
    </div>
  );
};

export default MainPage;